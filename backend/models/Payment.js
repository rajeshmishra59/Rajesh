// üìÅ D:\AppDevelopment\instay-app\backend\models\Payment.js

const mongoose = require('mongoose');

const paymentSchema = new mongoose.Schema({
    student: { // ‡§Ø‡§π ‡§´‡•Ä‡§≤‡•ç‡§° ‡§õ‡§æ‡§§‡•ç‡§∞ ID ‡§ï‡•ã ‡§∏‡•ç‡§ü‡•ã‡§∞ ‡§ï‡§∞‡•á‡§ó‡§æ ‡§ú‡§ø‡§∏‡§∏‡•á ‡§π‡§Æ ‡§≠‡•Å‡§ó‡§§‡§æ‡§® ‡§ï‡•ã ‡§õ‡§æ‡§§‡•ç‡§∞ ‡§∏‡•á ‡§ú‡•ã‡§°‡§º ‡§∏‡§ï‡•á‡§Ç
        type: mongoose.Schema.Types.ObjectId,
        ref: 'Student', // 'Student' ‡§Ü‡§™‡§ï‡•á Student ‡§Æ‡•â‡§°‡§≤ ‡§ï‡§æ ‡§®‡§æ‡§Æ ‡§π‡•à
        required: true
    },
    amount: {
        type: Number,
        required: true,
        min: 0 // ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡§ø ‡§∞‡§æ‡§∂‡§ø ‡§®‡§ï‡§æ‡§∞‡§æ‡§§‡•ç‡§Æ‡§ï ‡§® ‡§π‡•ã
    },
    paymentDate: {
        type: Date,
        default: Date.now // ‡§°‡§ø‡§´‡§º‡•â‡§≤‡•ç‡§ü ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§§‡§ø‡§•‡§ø ‡§î‡§∞ ‡§∏‡§Æ‡§Ø
    },
    paymentMethod: {
        type: String,
        enum: ['Cash', 'Online Transfer', 'Card', 'Cheque', 'Other'], // ‡§≠‡•Å‡§ó‡§§‡§æ‡§® ‡§ï‡•á ‡§§‡§∞‡•Ä‡§ï‡•á
        default: 'Cash'
    },
    transactionId: { // ‡§ë‡§®‡§≤‡§æ‡§á‡§® ‡§≤‡•á‡§®‡§¶‡•á‡§® ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡•à‡§ï‡§≤‡•ç‡§™‡§ø‡§ï
        type: String,
        unique: true, // ‡§Ø‡§¶‡§ø ‡§ü‡•ç‡§∞‡§æ‡§Ç‡§ú‡§º‡•à‡§ï‡•ç‡§∂‡§® ID ‡§Ø‡•Ç‡§®‡§ø‡§ï ‡§π‡•ã‡§®‡§æ ‡§ö‡§æ‡§π‡§ø‡§è
        sparse: true // ‡§Ø‡§¶‡§ø ‡§Ø‡§π ‡§ñ‡§æ‡§≤‡•Ä ‡§π‡•ã ‡§∏‡§ï‡§§‡§æ ‡§π‡•à, ‡§§‡•ã ‡§ñ‡§æ‡§≤‡•Ä ‡§Æ‡§æ‡§®‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ø‡•Ç‡§®‡§ø‡§ï ‡§á‡§Ç‡§°‡•á‡§ï‡•ç‡§∏ ‡§≤‡§æ‡§ó‡•Ç ‡§® ‡§ï‡§∞‡•á‡§Ç
    },
    description: { // ‡§≠‡•Å‡§ó‡§§‡§æ‡§® ‡§ï‡§æ ‡§µ‡§ø‡§µ‡§∞‡§£
        type: String,
        trim: true // ‡§Ö‡§ó‡•ç‡§∞‡§£‡•Ä/‡§Ö‡§®‡•Å‡§ó‡§æ‡§Æ‡•Ä ‡§∞‡§ø‡§ï‡•ç‡§§ ‡§∏‡•ç‡§•‡§æ‡§® ‡§π‡§ü‡§æ‡§è‡§Å
    },
    // ‡§≠‡§µ‡§ø‡§∑‡•ç‡§Ø ‡§ï‡•á ‡§≤‡§ø‡§è: ‡§Ü‡§™ paymentStatus, createdBy, ‡§Ü‡§¶‡§ø ‡§ú‡•à‡§∏‡•á ‡§´‡§º‡•Ä‡§≤‡•ç‡§° ‡§ú‡•ã‡§°‡§º ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç
}, {
    timestamps: true // createdAt ‡§î‡§∞ updatedAt ‡§´‡§º‡•Ä‡§≤‡•ç‡§° ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
});

module.exports = mongoose.model('Payment', paymentSchema);