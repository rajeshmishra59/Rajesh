// ЁЯУБ D:\AppDevelopment\instay-app\backend\models\Complaint.js

const mongoose = require('mongoose');

const complaintSchema = new mongoose.Schema({
    student: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'Student', // рдпрд╣ 'Student' рдореЙрдбрд▓ рд╕реЗ рд▓рд┐рдВрдХ рд╣реЛрдЧрд╛
        required: true,
    },
    // рдпрджрд┐ рд╢рд┐рдХрд╛рдпрдд рдХрд┐рд╕реА рд╡рд┐рд╢рд┐рд╖реНрдЯ рд╕реНрдкреЗрд╕/рд░реВрдо рд╕реЗ рд╕рдВрдмрдВрдзрд┐рдд рд╣реИ
    space: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'Space', // рдпрд╣ 'Space' рдореЙрдбрд▓ рд╕реЗ рд▓рд┐рдВрдХ рд╣реЛрдЧрд╛
        default: null, // рдпрд╣ рд╡реИрдХрд▓реНрдкрд┐рдХ рд╣реИ
    },
    category: {
        type: String,
        required: true,
        enum: [
            'Plumbing',
            'Electrical',
            'Cleaning & Housekeeping',
            'Internet & Wi-Fi',
            'Furniture & Appliances',
            'Pest Control',
            'Safety & Security',
            'Food & Mess',
            'Management & Staff',
            'Other'
        ],
        trim: true,
    },
    description: {
        type: String,
        required: true,
        trim: true,
    },
    ticketId: {
        type: String,
        required: true,
        unique: true, // рдкреНрд░рддреНрдпреЗрдХ рд╢рд┐рдХрд╛рдпрдд рдХреЗ рд▓рд┐рдП рдЕрджреНрд╡рд┐рддреАрдп рдЯрд┐рдХрдЯ рдЖрдИрдбреА
    },
    status: {
        type: String,
        enum: ['Open', 'In Progress', 'Resolved', 'Closed', 'Rejected'],
        default: 'Open',
    },
    priority: { // рд╡реИрдХрд▓реНрдкрд┐рдХ: рдкреНрд░рд╛рдердорд┐рдХрддрд╛
        type: String,
        enum: ['Low', 'Medium', 'High', 'Urgent'],
        default: 'Medium',
    },
    estimatedResolutionTime: { // рд╕рдВрднрд╛рд╡рд┐рдд рдирд┐рд╖реНрдкрд╛рджрди рдХрд╛ рд╕рдордп (рд╡реНрдпрд╡рд╕реНрдерд╛рдкрдХ рджреНрд╡рд╛рд░рд╛ рд╕реЗрдЯ)
        type: Date,
        default: null,
    },
    actualResolutionTime: { // рд╡рд╛рд╕реНрддрд╡рд┐рдХ рдирд┐рд╖реНрдкрд╛рджрди рдХрд╛ рд╕рдордп
        type: Date,
        default: null,
    },
    adminComments: { // рд╡реНрдпрд╡рд╕реНрдерд╛рдкрдХ/рдкреНрд░рдмрдВрдзрдХ рдХреА рдЯрд┐рдкреНрдкрдгрд┐рдпрд╛рдБ
        type: String,
        trim: true,
        default: '',
    },
    studentFeedback: { // рд╕рдорд╛рдзрд╛рди рдХреЗ рдмрд╛рдж рдЫрд╛рддреНрд░ рдХреА рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛
        type: String,
        trim: true,
        default: '',
    },
    attachmentUrl: { // рд╡реИрдХрд▓реНрдкрд┐рдХ: рдЕрдЯреИрдЪрдореЗрдВрдЯ (рдлреЛрдЯреЛ/рд╡реАрдбрд┐рдпреЛ) рдХрд╛ URL
        type: String,
        default: null,
    },
}, {
    timestamps: true, // createdAt рдФрд░ updatedAt рдлрд╝реАрд▓реНрдб рдЬреЛрдбрд╝рддрд╛ рд╣реИ
});

// рдЯрд┐рдХрдЯ ID рдЬрдирд░реЗрдЯ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдкреНрд░реА-рд╕реЗрд╡ рд╣реБрдХ
// рдпрд╣ рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░рддрд╛ рд╣реИ рдХрд┐ рдПрдХ рдЕрджреНрд╡рд┐рддреАрдп ID рдмрдирддреА рд╣реИ
complaintSchema.pre('save', async function(next) {
    if (!this.ticketId) {
        // рдПрдХ рд╕рд╛рдзрд╛рд░рдг рдЯрд╛рдЗрдорд╕реНрдЯреИрдореНрдк-рдЖрдзрд╛рд░рд┐рдд ID, рдЬрд┐рд╕реЗ рдмрд╛рдж рдореЗрдВ рдЕрдзрд┐рдХ рдордЬрдмреВрдд рдХрд┐рдпрд╛ рдЬрд╛ рд╕рдХрддрд╛ рд╣реИ
        this.ticketId = `CMP-${Date.now()}-${Math.random().toString(36).substr(2, 4).toUpperCase()}`;
    }
    next();
});

module.exports = mongoose.model('Complaint', complaintSchema);