// üìÅ D:\AppDevelopment\instay-app\backend\utils\catchAsyncError.js

// ‡§Ø‡§π ‡§è‡§ï ‡§â‡§ö‡•ç‡§ö-‡§ï‡•ç‡§∞‡§Æ ‡§ï‡§æ ‡§´‡§º‡§Ç‡§ï‡•ç‡§∂‡§® (Higher-Order Function) ‡§π‡•à ‡§ú‡•ã ‡§è‡§ï‡•ç‡§∏‡§™‡•ç‡§∞‡•á‡§∏.js ‡§ï‡•á
// ‡§è‡§∏‡§ø‡§Ç‡§ï‡•ç‡§∞‡•ã‡§®‡§∏ ‡§∞‡§æ‡§â‡§ü ‡§π‡•à‡§Ç‡§°‡§≤‡§∞‡•ç‡§∏ ‡§Æ‡•á‡§Ç ‡§è‡§∞‡§∞‡•ç‡§∏ ‡§ï‡•ã ‡§ï‡•à‡§ö ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§
// ‡§Ø‡§π try-catch ‡§¨‡•ç‡§≤‡•â‡§ï ‡§ï‡•á ‡§¶‡•ã‡§π‡§∞‡§æ‡§µ ‡§∏‡•á ‡§¨‡§ö‡§æ‡§§‡§æ ‡§π‡•à‡•§
const catchAsyncError = (func) => (req, res, next) => {
    // ‡§™‡•ç‡§∞‡•â‡§Æ‡§ø‡§∏ ‡§ï‡•ã resuelve ‡§ï‡§∞‡§§‡§æ ‡§π‡•à ‡§î‡§∞ ‡§Ø‡§¶‡§ø ‡§ï‡•ã‡§à ‡§è‡§∞‡§∞ ‡§π‡•ã‡§§‡§æ ‡§π‡•à,
    // ‡§§‡•ã ‡§â‡§∏‡•á ‡§®‡•á‡§ï‡•ç‡§∏‡•ç‡§ü ‡§Æ‡§ø‡§°‡§ø‡§≤‡§µ‡•á‡§Ø‡§∞ (‡§è‡§∞‡§∞ ‡§π‡•à‡§Ç‡§°‡§≤‡§∞) ‡§Æ‡•á‡§Ç ‡§≠‡•á‡§ú‡§§‡§æ ‡§π‡•à‡•§
    Promise.resolve(func(req, res, next)).catch(next);
};

module.exports = catchAsyncError;